<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>You Gotta Move</title>
    <link href="/posts/49719/"/>
    <url>/posts/49719/</url>
    
    <content type="html"><![CDATA[<center><p>You got to move</p><p>You got to move</p><p>You got to move, child</p><p>You got to move</p><p>But when the Lord</p><p>Gets ready</p><p>You got to move</p><hr><p>You may be high</p><p>You may be low</p><p>You may be rich, child</p><p>You may be po'</p><p>But when the Lord</p><p>Gets ready</p><p>You've got to move</p><hr><p>You see that woman</p><p>That walk the street</p><p>You see the policeman</p><p>Out on his beat</p><p>But when the Lord gets ready</p><p>You got to move</p><hr><p>You got to move</p><p>You got to move</p><p>You've got to move, child</p><p>You got to</p><p>But when the Lord gets ready</p>You got to</center>]]></content>
    
    
    <categories>
      
      <category>lyrics</category>
      
    </categories>
    
    
    <tags>
      
      <tag>lyrics</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用 Shamiko 隐藏手机 Root</title>
    <link href="/posts/43875/"/>
    <url>/posts/43875/</url>
    
    <content type="html"><![CDATA[<h2 id="为什么要隐藏-root">为什么要隐藏 Root？</h2><p>一些银行app、游戏出于安全顾虑，会在应用启动时检测ROOT，若检测到设备已被ROOT，app就会异常退出，导致应用无法正常使用。因此就有了隐藏ROOT的需求。例如以下是打开《部落冲突：皇室战争》后，因检测到手机已被ROOT导致游戏直接闪退：<img src="/img/builtin/hide-root/cr.gif"alt="检测到ROOT导致闪退的Clash Royale" /></p><h2 id="隐藏-root-的方法">隐藏 Root 的方法</h2><p>我们可以通过安装 <code>Shamiko</code> 的方式来隐藏ROOT。</p><h3 id="下载-shamiko">1. 下载 Shamiko</h3><p>打开 <code>Shamiko</code> 的 <ahref="https://github.com/LSPosed/LSPosed.github.io/releases">Githubrelease</a>，选择跟自己 <code>Magisk</code> 版本相符的版本下载。</p><h3 id="在-magisk-中安装-shamiko">2. 在 Magisk 中安装 Shamiko</h3><p>打开 <code>Magisk</code>，点击下方 <code>模块</code>，点击<code>从本地安装</code>，选择刚刚下载的文件，等待安装完后点击<strong>重启</strong>。</p><h3 id="配置-shamiko">3. 配置 Shamiko</h3><p><code>Shamiko</code> 有两种启动模式：</p><ul><li>黑名单模式（blacklist，<strong>默认</strong>）：仅对黑名单内的应用生效；</li><li>白名单模式（whitelist）：<strong>全局隐藏ROOT</strong>，仅对白名单内的应用失效。</li></ul><p>这里建议用<strong>白名单模式（whitelist）</strong>，这样就免去了给每个应用手动加入黑名单的繁琐。方法如下：</p><p>在 <code>/data/adb/shamiko/</code> 新建一个文件<code>whitelist</code> 即可启用白名单模式。</p><p>若要启用黑名单模式，将 <code>whitelist</code> 文件删除即可。</p><h3 id="完成">4. 完成</h3><p>在 <code>Magisk</code> 模块页中，若能看到<code>[😋 Shamiko is working as whitelist mode]</code>则说明白名单配置成功。银行app、一些有ROOT检测的游戏都能正常使用了。</p>]]></content>
    
    
    <categories>
      
      <category>Android</category>
      
    </categories>
    
    
    <tags>
      
      <tag>android</tag>
      
      <tag>root</tag>
      
      <tag>magisk</tag>
      
      <tag>shamiko</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用一道数学题比较当下最流行的模型</title>
    <link href="/posts/4267/"/>
    <url>/posts/4267/</url>
    
    <content type="html"><![CDATA[<h2 id="概述">概述</h2><p>今天用一道高中数学导数大题同时问3个AI，结果令人大吃一惊。</p><p>首先来看题目：</p><blockquote><p>已知函数 <span class="math inline">\(f(x) = e^{2x}-5e^x + \lambdax\)</span>.</p><p>（1）若 <span class="math inline">\(\lambda = 2\)</span>，求 <spanclass="math inline">\(f(x)\)</span> 的极值；</p><p>（2）若 <span class="math inline">\(f(x)\)</span> 在区间 <spanclass="math inline">\((-\infty, 0)\)</span> 上存在零点，求实数 <spanclass="math inline">\(\lambda\)</span> 的取值范围.</p></blockquote><p>使用的 <em>prompt</em> 如下：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">已知函数 f(x) = e^&#123;2x&#125;-5e^x + \lambda x.<br>（1）若 \lambda = 2，求 f(x) 的极值；<br>（2）若 f(x) 在区间(-\infty, 0)上存在零点，求实数 \lambda 的取值范围.<br></code></pre></td></tr></table></figure><h2 id="deepseek-的回答">Deepseek 的回答</h2><p>我首先问了<strong>当下最火的中国大模型</strong><code>deepseek-r1</code>，由于它的思考过程过于冗长，我们在这里只关注它的最终结果，但思考过程也会<ahref="../18447/">在这里</a>附上。</p><blockquote><p>已知函数 <span class="math inline">\(f(x)=e^{2x}-5e^{x}+\lambdax\)</span>。</p><p>（1）当 <span class="math inline">\(\lambda = 2\)</span> 时，求 <spanclass="math inline">\(f(x)\)</span> 的极值：</p><p>首先求导函数 <span class="math inline">\(f&#39;(x)\)</span>：</p><p><span class="math display">\[f&#39;(x) = 2e^{2x}-5e^{x}+2\]</span></p><p>令 <span class="math inline">\(f&#39;(x)=0\)</span>，解得：</p><p><span class="math display">\[2e^{2x}-5e^{x}+2=0\]</span></p><p>令 <span class="math inline">\(t=e^x\)</span>，方程变为：</p><p><span class="math display">\[2t^2-5t+2=0\]</span></p><p>解得 <span class="math inline">\(t=2\)</span> 或 <spanclass="math inline">\(t=\frac{1}{2}\)</span>，即 <spanclass="math inline">\(x=ln2\)</span> 或 <spanclass="math inline">\(x=-ln2\)</span>。</p><p>计算二阶导数 <spanclass="math inline">\(f&#39;&#39;(x)\)</span>：</p><p><span class="math display">\[f&#39;&#39;(x)=4e^{2x}-5e^{x}\]</span></p><p>在 <span class="math inline">\(x=ln2\)</span> 处：</p><p><span class="math display">\[f&#39;&#39;(ln2)=4e^{2ln2}-5e^{ln2}=4 \cdot 4 - 5 \cdot 2 = 6 &gt; 0\]</span></p><p>因此 <span class="math inline">\(x=ln2\)</span> 处有极小值：</p><p><span class="math display">\[f(ln2)=e^{2ln2}-5e^{ln2}+2ln2=4-10+2ln2=-6+2ln2\]</span></p><p>在 <span class="math inline">\(x=-ln2\)</span> 处：</p><p><span class="math display">\[f&#39;&#39;(-ln2)=4e^{-2ln2}-5e^{-ln2}=4 \cdot \frac{1}{4}-5 \cdot\frac{1}{2}=-1.5&lt;0\]</span></p><p>因此 <span class="math inline">\(x=-ln2\)</span> 处有极大值：</p><p><span class="math display">\[f(-ln2)=e^{-2ln2}-5e^{-ln2}-2ln2=\frac{1}{4}-\frac{5}{2}-2ln2=-\frac{9}{4}-2ln2\]</span></p><p>（2）若 <span class="math inline">\(f(x)\)</span> 在区间 <spanclass="math inline">\((-\infty,0)\)</span> 上存在零点，求实数 <spanclass="math inline">\(\lambda\)</span> 的取值范围：</p><p>分析函数 <span class="math inline">\(f(x) = e^{2x}-5e^{x}+\lambdax\)</span> 在区间 <span class="math inline">\((-\infty,0)\)</span>上的行为：</p><p>当 <span class="math inline">\(x→-\infty\)</span> 时，<spanclass="math inline">\(e^{2x}\)</span> 和 <spanclass="math inline">\(e^x\)</span> 均趋近于 <spanclass="math inline">\(0\)</span>，函数行为由 <spanclass="math inline">\(\lambda x\)</span> 主导：</p><ul><li>若 <span class="math inline">\(\lambda &gt; 0\)</span>，则 <spanclass="math inline">\(f(x)→-\infty\)</span>；</li><li>若 <span class="math inline">\(\lambda &lt; 0\)</span>，则 <spanclass="math inline">\(f(x)→+\infty\)</span>；</li></ul><p>当 <span class="math inline">\(x→0^-\)</span> 时，<spanclass="math inline">\(f(x)→-4\)</span>。</p><p>当 <span class="math inline">\(\lambda &lt; 0\)</span> 时，<spanclass="math inline">\(f(x)\)</span> 在 <spanclass="math inline">\(x→-\infty\)</span> 时趋向于 <spanclass="math inline">\(+\infty\)</span>，在 <spanclass="math inline">\(x→0^-\)</span> 时趋向于 <spanclass="math inline">\(-4\)</span>，根据中间值定理，必定存在零点。</p><p>当 <span class="math inline">\(\lambda \ge 0\)</span> 时，分析 <spanclass="math inline">\(f(x)\)</span>的极值点和函数值，发现不存在零点。</p><p>因此，实数 <span class="math inline">\(\lambda\)</span> 的取值范围为<span class="math inline">\(\lambda &lt; 0\)</span>。</p></blockquote><p>可以看出，<code>deepseek-r1</code> 能完美答对，就是思考过程太长。</p><h2 id="gemini-的回答">Gemini 的回答</h2><p>接下来是 Google 在上个月推出的推理模型<code>gemini-2.0-flash-thinking-exp-01-21</code>。</p><blockquote><p>解：</p><p>（1）当 <span class="math inline">\(\lambda = 2\)</span> 时，<spanclass="math inline">\(f(x) = e^{2x}-5e^x + 2x\)</span>.</p><p>求导得 <span class="math inline">\(f&#39;(x) = 2e^{2x} - 5e^x +2\)</span>.</p><p>令 <span class="math inline">\(f&#39;(x) = 0\)</span>，则 <spanclass="math inline">\(2e^{2x} - 5e^x + 2 = 0\)</span>，设 <spanclass="math inline">\(t = e^x\)</span>，则 <spanclass="math inline">\(2t^2 - 5t + 2 = 0\)</span>，解得 <spanclass="math inline">\((2t - 1)(t - 2) = 0\)</span>，所以 <spanclass="math inline">\(t = \frac{1}{2}\)</span> 或 <spanclass="math inline">\(t = 2\)</span>.</p><p>即 <span class="math inline">\(e^x = \frac{1}{2}\)</span> 或 <spanclass="math inline">\(e^x = 2\)</span>，解得 <spanclass="math inline">\(x = ln(\frac{1}{2}) = -ln(2)\)</span> 或 <spanclass="math inline">\(x = ln(2)\)</span>.</p><p>求二阶导数 <span class="math inline">\(f&#39;&#39;(x) = 4e^{2x} -5e^x\)</span>.</p><p>当 <span class="math inline">\(x = -ln(2)\)</span> 时，<spanclass="math inline">\(f&#39;&#39;(-ln(2))\)</span> = <spanclass="math inline">\(4e^{-2ln(2)} - 5e^{-ln(2)} = 4e^{ln(1/4)} -5e^{ln(1/2)} = 4 \cdot \frac{1}{4} - 5 \cdot \frac{1}{2} = 1 -\frac{5}{2} = -\frac{3}{2} &lt; 0\)</span>.</p><p>所以 <span class="math inline">\(f(x)\)</span> 在 <spanclass="math inline">\(x = -ln(2)\)</span> 处取得极大值，极大值为 <spanclass="math inline">\(f(-ln(2)) = e^{-2ln(2)} - 5e^{-ln(2)} + 2(-ln(2))= \frac{1}{4} - 5 \cdot \frac{1}{2} - 2ln(2) = -\frac{9}{4} -2ln(2)\)</span>.</p><p>当 <span class="math inline">\(x = ln(2)\)</span> 时，<spanclass="math inline">\(f&#39;&#39;(ln(2)) = 4e^{2ln(2)} - 5e^{ln(2)} =4e^{ln(4)} - 5e^{ln(2)} = 4 \cdot 4 - 5 \cdot 2 = 16 - 10 = 6 &gt;0\)</span>.</p><p>所以 <span class="math inline">\(f(x)\)</span> 在 <spanclass="math inline">\(x = ln(2)\)</span> 处取得极小值，极小值为 <spanclass="math inline">\(f(ln(2)) = e^{2ln(2)} - 5e^{ln(2)} + 2ln(2) = 4 -5 \cdot 2 + 2ln(2) = -6 + 2ln(2)\)</span>.</p><p>（2）要使 <span class="math inline">\(f(x)\)</span> 在区间 <spanclass="math inline">\((-\infty, 0)\)</span> 上存在零点，即存在 <spanclass="math inline">\(x \in (-\infty, 0)\)</span> 使得 <spanclass="math inline">\(f(x) = 0\)</span>，即 <spanclass="math inline">\(e^{2x}-5e^x + \lambda x = 0\)</span>.</p><p>当 <span class="math inline">\(x \neq 0\)</span> 时，<spanclass="math inline">\(\lambda = \frac{5e^x - e^{2x}}{x}\)</span>. 设<span class="math inline">\(g(x) = \frac{5e^x - e^{2x}}{x}\)</span>.我们需要求 <span class="math inline">\(g(x)\)</span> 在 <spanclass="math inline">\((-\infty, 0)\)</span> 上的值域.</p><p>求导得 <span class="math inline">\(g&#39;(x) = \frac{(5e^x -2e^{2x})x - (5e^x - e^{2x})}{x^2} = \frac{5xe^x - 2xe^{2x} - 5e^x +e^{2x}}{x^2} = \frac{e^x(5x - 2xe^x - 5 + e^x)}{x^2}\)</span>.</p><p>令 <span class="math inline">\(h(x) = 5x - 2xe^x - 5 + e^x\)</span>.则 <span class="math inline">\(h&#39;(x) = 5 - 2e^x - 2xe^x + e^x = 5 -e^x - 2xe^x\)</span>.</p><p><span class="math inline">\(h&#39;&#39;(x) = -e^x - 2e^x - 2xe^x =-3e^x - 2xe^x = -e^x(3 + 2x)\)</span>.</p><p>当 <span class="math inline">\(x &lt; -3/2\)</span> 时，<spanclass="math inline">\(h&#39;&#39;(x) &gt; 0\)</span>，<spanclass="math inline">\(h&#39;(x)\)</span> 递增；当 <spanclass="math inline">\(x &gt; -3/2\)</span> 时，<spanclass="math inline">\(h&#39;&#39;(x) &lt; 0\)</span>，<spanclass="math inline">\(h&#39;(x)\)</span> 递减.</p><p><span class="math inline">\(h&#39;(x)\)</span> 在 <spanclass="math inline">\(x = -3/2\)</span> 处取得极大值 <spanclass="math inline">\(h&#39;(-3/2) = 5 - e^{-3/2} -2(-\frac{3}{2})e^{-3/2} = 5 - e^{-3/2} + 3e^{-3/2} = 5 + 2e^{-3/2} &gt;0\)</span>.</p><p>又 <span class="math inline">\(\lim_{x \to -\infty} h&#39;(x) = 5&gt; 0，h&#39;(0) = 5 - 1 - 0 = 4 &gt; 0\)</span>. 所以 <spanclass="math inline">\(h&#39;(x) &gt; 0\)</span> 在 <spanclass="math inline">\((-\infty, 0)\)</span> 上恒成立，<spanclass="math inline">\(h(x)\)</span> 在 <spanclass="math inline">\((-\infty, 0)\)</span> 上递增.</p><p><span class="math inline">\(\lim_{x \to -\infty} h(x) = \lim_{x \to-\infty} (5x - 2xe^x - 5 + e^x) = -\infty - 0 - 5 + 0 =-\infty\)</span>.</p><p><span class="math inline">\(h(0) = -5 + 1 = -4 &lt; 0\)</span>. 所以<span class="math inline">\(h(x) &lt; 0\)</span> 在 <spanclass="math inline">\((-\infty, 0)\)</span> 上恒成立.</p><p>因此 <span class="math inline">\(g&#39;(x) &lt; 0\)</span> 在 <spanclass="math inline">\((-\infty, 0)\)</span> 上恒成立，<spanclass="math inline">\(g(x)\)</span> 在 <spanclass="math inline">\((-\infty, 0)\)</span> 上递减.</p><p><span class="math inline">\(\lim_{x \to -\infty} g(x) = \lim_{x \to-\infty} \frac{5e^x - e^{2x}}{x} = 0\)</span>.</p><p><span class="math inline">\(\lim_{x \to 0^-} g(x) = \lim_{x \to 0^-}\frac{5e^x - e^{2x}}{x} = \frac{4}{0^-} = -\infty\)</span>.</p><p>所以 <span class="math inline">\(g(x)\)</span> 在 <spanclass="math inline">\((-\infty, 0)\)</span> 上的值域为 <spanclass="math inline">\((-\infty, 0)\)</span>.</p><p>因此，实数 <span class="math inline">\(\lambda\)</span> 的取值范围为<span class="math inline">\((-\infty, 0)\)</span>.</p><p>最终答案：</p><p>（1）当 <span class="math inline">\(\lambda = 2\)</span> 时，<spanclass="math inline">\(f(x)\)</span> 在 <span class="math inline">\(x =-ln(2)\)</span> 处取得极大值 <span class="math inline">\(-\frac{9}{4} -2ln(2)\)</span>，在 <span class="math inline">\(x = ln(2)\)</span>处取得极小值 <span class="math inline">\(-6 + 2ln(2)\)</span>.</p><p>（2）实数 <span class="math inline">\(\lambda\)</span> 的取值范围为<span class="math inline">\((-\infty, 0)\)</span>.</p></blockquote><p>比较意外的是这个 Goodle 的模型也可以答对。顺便说一下，这个模型在<code>deepseek-r1</code> 推出的一天后就发布了，其实是无意追赶Deepseek（因为那时候 deepseek 还不火），但有这样的表现着实惊艳。</p><h2 id="chatgpt-的回答">ChatGPT 的回答</h2><p>接下来是 OpenAI 最新的推理模型 <code>o3-mini</code>。</p><blockquote><p>（1）若 λ = 2，求 f(x) 的极值。 已知函数：</p><p><span class="math display">\[f(x) = e^{2x} - 5e^x + \lambda x\]</span></p><p>当 <span class="math inline">\(\lambda = 2\)</span>时，函数变为：</p><p><span class="math display">\[f(x) = e^{2x} - 5e^x + 2x\]</span></p><p>首先，求 f(x) 的一阶导数：</p><p><span class="math display">\[f&#39;(x) = \frac{d}{dx}(e^{2x}) - \frac{d}{dx}(5e^x) + \frac{d}{dx}(2x)\]</span></p><p><span class="math display">\[f&#39;(x) = 2e^{2x} - 5e^x + 2\]</span></p><p>为了找极值点，解方程 <span class="math inline">\(f&#39;(x) =0\)</span>：</p><p><span class="math display">\[2e^{2x} - 5e^x + 2 = 0\]</span></p><p>设 <span class="math inline">\(y = e^x\)</span>，则 <spanclass="math inline">\(e^{2x} = y^2\)</span>，方程变为：</p><p><span class="math display">\[2y^2 - 5y + 2 = 0\]</span></p><p>解这个二次方程：</p><p><span class="math display">\[y = \frac{-(-5) \pm \sqrt{(-5)^2 - 4 \cdot 2 \cdot 2}}{2 \cdot 2} =\frac{5 \pm \sqrt{25 - 16}}{4} = \frac{5 \pm \sqrt{9}}{4}\]</span></p><p><span class="math display">\[y = \frac{5 \pm 3}{4}\]</span></p><p>所以，<span class="math inline">\(y = 2\)</span> 或 <spanclass="math inline">\(y = \frac{1}{2}\)</span>。</p><p>因此，<span class="math inline">\(e^x = 2\)</span> 或 <spanclass="math inline">\(e^x = \frac{1}{2}\)</span>，即：</p><p><span class="math display">\[x = \ln 2 \quad \text{或} \quad x = -\ln 2\]</span></p><p>这两个点分别为极值点。</p><p>接下来，判断这两个点的极值类型。我们求 f(x) 的二阶导数：</p><p><span class="math display">\[f&#39;&#39;(x) = \frac{d}{dx}(2e^{2x} - 5e^x + 2) = 4e^{2x} - 5e^x\]</span></p><p>在 <span class="math inline">\(x = \ln 2\)</span> 处：</p><p><span class="math display">\[f&#39;&#39;(\ln 2) = 4e^{2\ln 2} - 5e^{\ln 2} = 4 \cdot 4 - 5 \cdot 2 =16 - 10 = 6 &gt; 0\]</span></p><p>所以，<span class="math inline">\(x = \ln 2\)</span>是一个极小值点。</p><p>在 <span class="math inline">\(x = -\ln 2\)</span> 处：</p><p><span class="math display">\[f&#39;&#39;(-\ln 2) = 4e^{2(-\ln 2)} - 5e^{-\ln 2} = 4 \cdot \frac{1}{4}- 5 \cdot \frac{1}{2} = 1 - \frac{5}{2} = -\frac{3}{2} &lt; 0\]</span></p><p>所以，<span class="math inline">\(x = -\ln 2\)</span>是一个极大值点。</p><p>因此，<span class="math inline">\(x = \ln 2\)</span>为极小值点，<span class="math inline">\(x = -\ln 2\)</span>为极大值点。</p><p>（2）若 f(x) 在区间 <span class="math inline">\((-∞, 0)\)</span>上存在零点，求实数 <span class="math inline">\(\lambda\)</span>的取值范围。</p><p>首先，函数为：</p><p><span class="math display">\[f(x) = e^{2x} - 5e^x + \lambda x\]</span></p><p>要使 f(x) 在区间 <span class="math inline">\((-∞, 0)\)</span>上有零点，首先分析函数的行为。我们首先考虑 f(x) 在 x = 0 处的值：</p><p><span class="math display">\[f(0) = e^{2 \cdot 0} - 5e^0 + \lambda \cdot 0 = 1 - 5 = -4\]</span></p><p>因此，<span class="math inline">\(f(0) = -4\)</span>。</p><p>对于 <span class="math inline">\(x \to -\infty\)</span>，因为 <spanclass="math inline">\(e^{2x} \to 0\)</span> 和 <spanclass="math inline">\(e^x \to 0\)</span>，所以当 <spanclass="math inline">\(x \to -\infty\)</span> 时：</p><p><span class="math display">\[f(x) \to 0\]</span></p><p>我们分析 f(x) 的导数：</p><p><span class="math display">\[f&#39;(x) = 2e^{2x} - 5e^x + \lambda\]</span></p><p>对于 <span class="math inline">\(x \to -\infty\)</span>，<spanclass="math inline">\(e^x\)</span> 和 <spanclass="math inline">\(e^{2x}\)</span> 都趋近于 0，因此：</p><p><span class="math display">\[f&#39;(x) \to \lambda\]</span></p><p>因此，如果 <span class="math inline">\(\lambda &gt; 0\)</span>，则<span class="math inline">\(f&#39;(x) &gt; 0\)</span>，即 f(x)是递增的；如果 <span class="math inline">\(\lambda &lt; 0\)</span>，则<span class="math inline">\(f&#39;(x) &lt; 0\)</span>，即 f(x)是递减的；如果 <span class="math inline">\(\lambda = 0\)</span>，则<span class="math inline">\(f&#39;(x) = 2e^{2x} - 5e^x\)</span> 在 <spanclass="math inline">\(x \to -\infty\)</span> 时趋近于 0。</p><p>由于 <span class="math inline">\(f(0) = -4\)</span>，而 <spanclass="math inline">\(f(x) \to 0\)</span> 当 <spanclass="math inline">\(x \to -\infty\)</span>，如果 <spanclass="math inline">\(\lambda &gt; 0\)</span>，那么 f(x)是递增的，必定存在零点。而如果 <span class="math inline">\(\lambda \leq0\)</span>，由于 <span class="math inline">\(f(x)\)</span>没有足够的上升趋势，它可能不会有零点。</p><p>因此，要使 f(x) 在区间 <span class="math inline">\((-∞, 0)\)</span>上存在零点，实数 <span class="math inline">\(\lambda\)</span>必须满足：</p><p><span class="math display">\[\lambda &gt; 0\]</span></p></blockquote><p>？？？</p><p>刚开始还以为用错模型了，再一看没错啊。</p><p>多试了几次，仍然是这种结果。</p><p>第一问就不太对，题目问极值却只求出了极值点。</p><p>很明显，这个模型很废物，竟然连 gemini 都不如，实在不知道 OpenAI每天都在干啥。</p><p>会不会需要付费才能使用的 <code>o3-mini-high</code>可以解答呢？我去浅试了一下：</p><blockquote><p>设 <span class="math inline">\(f(x) = e^(2x) - 5e^x +λx\)</span>.</p><p>（1）当 <span class="math inline">\(λ = 2\)</span> 时，<spanclass="math inline">\(f(x) = e^(2x) - 5e^x + 2x\)</span>.</p><p>求导：</p><p> <span class="math inline">\(f&#39;(x) = 2e^(2x) - 5e^x +2\)</span>.</p><p>设 <span class="math inline">\(f&#39;(x) = 0\)</span>，令 <spanclass="math inline">\(u = e^x\)</span>（注意 <spanclass="math inline">\(u &gt; 0\)</span>）：</p><p> 有 $2u^2 - 5u + 2 = $.</p><p>解该二次方程：</p><p> <span class="math inline">\(Δ = 25 - 16 = 9\)</span>, 则 <spanclass="math inline">\(u = [5 ± 3] / 4\)</span>.</p><p>所以，<span class="math inline">\(u1 = 2\)</span>, <spanclass="math inline">\(u2 = 1/2\)</span>.</p><p>对应 <span class="math inline">\(x1 = ln2\)</span>, <spanclass="math inline">\(x2 = -ln2\)</span>.</p><p>计算二阶导数：</p><p> <span class="math inline">\(f&#39;&#39;(x) = 4e^(2x) -5e^x\)</span>.</p><p>在 <span class="math inline">\(x = ln2\)</span>:</p><p> <span class="math inline">\(f&#39;&#39;(ln2) = 4(4) - 5(2) = 16 - 10= 6 &gt; 0\)</span>, 故 <span class="math inline">\(x = ln2\)</span>为局部最小点.</p><p>在 <span class="math inline">\(x = -ln2\)</span>:</p><p> <span class="math inline">\(f&#39;&#39;(-ln2) = 4(1/4) - 5(1/2) = 1- 2.5 = -1.5 &lt; 0\)</span>, 故 <span class="math inline">\(x =-ln2\)</span> 为局部最大点.</p><p>计算极值：</p><p> <span class="math inline">\(f(ln2) = e^(2ln2) - 5e^(ln2) + 2 ln2 = 4- 10 + 2 ln2 = -6 + 2 ln2\)</span>.</p><p> <span class="math inline">\(f(-ln2) = e^(-2ln2) - 5e^(-ln2) +2(-ln2) = 1/4 - 5/2 - 2 ln2 = -2.25 - 2 ln2\)</span>.</p><p>【答案1】：</p><p> 局部最大值：在 <span class="math inline">\(x = -ln2\)</span>, 值为<span class="math inline">\(-2.25 - 2 ln2\)</span>.</p><p> 局部最小值：在 <span class="math inline">\(x = ln2\)</span>, 值为<span class="math inline">\(-6 + 2 ln2\)</span>.</p><p>（2）讨论 <span class="math inline">\(f(x)\)</span> 在区间 <spanclass="math inline">\((-∞, 0)\)</span> 上存在零点的条件。</p><p>在 <span class="math inline">\(x = 0\)</span>:</p><p> <span class="math inline">\(f(0) = e^0 - 5e^0 + λ·0 = 1 - 5 =-4\)</span>.</p><p>当 <span class="math inline">\(x → -∞\)</span> 时，由于 <spanclass="math inline">\(e^(2x) → 0\)</span>, <spanclass="math inline">\(e^x → 0\)</span>, 故 <spanclass="math inline">\(f(x) ≈ λx\)</span>.</p><p>若 <span class="math inline">\(λ &lt; 0\)</span>，则当 <spanclass="math inline">\(x → -∞\)</span> 时，<span class="math inline">\(λx→ +∞\)</span>；此时 <span class="math inline">\(f(0) = -4\)</span>,根据连续性，函数 <span class="math inline">\(f(x)\)</span>必经过零点，所以在 <span class="math inline">\((-∞, 0)\)</span>上至少存在一个零点.</p><p>若 <span class="math inline">\(λ ≥ 0\)</span>，则 <spanclass="math inline">\(x → -∞\)</span> 时 <spanclass="math inline">\(f(x) → -∞\)</span> 或 <spanclass="math inline">\(0\)</span>，且 <span class="math inline">\(f(0) =-4\)</span>，因此 <span class="math inline">\(f(x)\)</span> 在 <spanclass="math inline">\((-∞, 0)\)</span> 内始终为负，不存在零点.</p><p>【答案2】：</p><p> <span class="math inline">\(f(x)\)</span> 在 <spanclass="math inline">\((-∞, 0)\)</span> 上存在零点的充要条件为 <spanclass="math inline">\(λ &lt; 0\)</span>.</p></blockquote><p>这才是 OpenAI 应有的水平。要是这个付费模型都解不出来，那 OpenAI不如早点关门吧。</p><h2 id="总结">总结</h2><p>总的来说，这次测试结果真的令人大跌眼镜：</p><ul><li>一是 Google 的 gemini 竟然表现异常突出；</li><li>二是 OpenAI 的免费模型竟然连 gemini 都不如。</li></ul><p>最后来个模型的粗略比较。</p><p>推理能力：<code>gemini-2.0-flash-thinking-exp-01-21</code> =<code>deepseek-r1</code> = <code>o3-mini-high</code> &gt;&gt;<code>o3-mini</code></p><p>用户体验：<code>gemini-2.0-flash-thinking-exp-01-21</code> =<code>o3-mini</code> &gt; <code>deepseek-r1</code>（因为思考时间过长）&gt;&gt; <code>o3-mini-high</code>（因为贵）</p><p>这样综合下来，<code>gemini-2.0-flash-thinking-exp-01-21</code>是最后的赢家。</p>]]></content>
    
    
    <categories>
      
      <category>AI</category>
      
      <category>Deepseek</category>
      
      <category>ChatGPT</category>
      
      <category>Gemini</category>
      
    </categories>
    
    
    <tags>
      
      <tag>ai</tag>
      
      <tag>llm</tag>
      
      <tag>数学</tag>
      
      <tag>deepseek</tag>
      
      <tag>chatgpt</tag>
      
      <tag>gemini</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>2024年度总结</title>
    <link href="/posts/24690/"/>
    <url>/posts/24690/</url>
    
    <content type="html"><![CDATA[<p>2024 已悄然离去，迎接我们的是2025。在过去的一年里，我们有喜，有悲；有悲欢离合，有阴晴圆缺。一年间，经历了不少的人和事，也遇到了很多机遇与挑战。但无论是苦难与否、成功与否，我们都应该将它们化为2025 年前进的动力。</p><p>回想2024，我创建了这个博客，用来记录我在计算机科学中遇到的有趣的解决方案。虽然因现实学业问题，没有更新太多文章，实为遗憾。但我始终相信博客上一开始就有的那句话：</p><blockquote><p>只要不失去你的崇高，整个世界都会向你敞开。<br> The world opens itselfbefore those with nobel hearts.</p></blockquote><p>2025，对我而言，是一个充满希望，亦是很重要的一年。愿我们都能以乐观的姿态积极面对每一天，心中有目标、有方向，才不会手忙脚乱。</p><p>斗胆在下以拙劣的文笔写出此篇年度总结，祝各位读者在新的一年里能心想事成，做自己想做的事。祝大家2025 新年快乐。</p>]]></content>
    
    
    <categories>
      
      <category>年度总结</category>
      
      <category>2024</category>
      
    </categories>
    
    
    <tags>
      
      <tag>年度总结</tag>
      
      <tag>碎碎念</tag>
      
      <tag>杂谈</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用 UEFI+GPT 安装 Windows 操作系统</title>
    <link href="/posts/18013/"/>
    <url>/posts/18013/</url>
    
    <content type="html"><![CDATA[<p>事情的起因是我一直在当作系统盘的hdd读写速度太慢了，每次开机都要等好久，而且用的是传统的legacy启动，开机速度就更慢了。因此今天我准备用GPT+UEFI 的组合，用现代的方案安装Windows 10 Pro22H2（其它系统大同小异），大幅提升开机速度。</p><h1 id="准备工作">准备工作</h1><h2 id="准备-pe">准备 PE</h2><blockquote><p>关于 PE 是什么，可以去维基百科查看详情：<ahref="https://w.wiki/BPhs">Windows预先安装环境</a></p></blockquote><p>鉴于此次我们需要把硬盘分区表改为GPT，所以我建议在U盘上安装PE来操作。市面上的PE五花八门，装机小白可能一不小心就选了某些「不干净」的PE。对此，我墙裂推荐<a href="https://www.wepe.com.cn/">微PE(wepe.com.cn)</a>（不是广告！！），简洁、免费，最重要的是可以一键安装进U盘。进入微PE官网后点击「下载」，这里建议选第一个V2.3版本。如果你的机器过旧，也可以选择V1.3旧版。</p><figure><img src="/img/builtin/install-windows-10-with-uefi-and-gpt/wepe.webp"alt="微PE下载官网" /><figcaption aria-hidden="true">微PE下载官网</figcaption></figure><p>查看下载地址会弹出一个捐赠的对话框，有能力的读者可以赞助一下。不想捐赠也可以点击「先不捐赠」。这里建议选择64位下载安装。</p><p>打开微PE程序后点击右下角「U盘安装」，选择好自己的U盘，剩下的选项默认即可。唯一需要注意的是文件系统要选择exFAT 或者 NTFS ，否则 FAT32 不能装下 ≥ 4 GB的文件（这非常重要，因为现在的Windows镜像文件大小普遍大于这个数字）。点击「立即安装」就开始了。<spanstyle="color: red;"><strong>注意，此过程会清空U盘所有数据，请自行做好数据备份。</strong></span></p><p><imgsrc="/img/builtin/install-windows-10-with-uefi-and-gpt/wepe_udisk.webp"alt="点击右下角U盘安装" /> <imgsrc="/img/builtin/install-windows-10-with-uefi-and-gpt/wepe_default_settings.webp"alt="大部分设置默认即可" /></p><p>安装过程需要等待较长时间，取决于你的U盘读写速率。完成后可以在此电脑里看到 U盘「分裂」了，其中一个是EFI分区，另一个是刚刚在微PE里「U盘卷标」设置的，这样就算是成功了。</p><figure><imgsrc="/img/builtin/install-windows-10-with-uefi-and-gpt/udisk_partition_apart.webp"alt="U盘变成两个分区" /><figcaption aria-hidden="true">U盘变成两个分区</figcaption></figure><h2 id="准备系统-iso-镜像">准备系统 ISO 镜像</h2><p>ISO 是个什么东东呢？如今大部分的操作系统安装都会给你提供一个ISO，你可以把它想像成一个光盘💿（ISO也确实能当光盘用），要安装的操作系统就贮存在这里面。</p><p>下载镜像最好去微软官网下载，谁知道第三方下载的有没有捆绑呢？</p><ul><li><ahref="https://www.microsoft.com/zh-cn/software-download/windows10">下载Windows 10</a></li><li><ahref="https://www.microsoft.com/zh-cn/software-download/windows11">下载Windows 11</a></li></ul><p>几点小建议：</p><ul><li>建议下载「多版本 ISO」，而不是「家庭中文版」。</li><li>如果要下载 Windows 10，可以打开 DevTools，然后启用设备仿真功能，刷新后就可以愉快下载 ISO 了。</li></ul><figure><imgsrc="/img/builtin/install-windows-10-with-uefi-and-gpt/toggle_device_emulation.webp"alt="打开dev tools，启用设备仿真功能" /><figcaption aria-hidden="true">打开devtools，启用设备仿真功能</figcaption></figure><p>下载好之后，把 ISO 文件塞进 U 盘里就大功告成了。准备正式重装系统。<imgsrc="/img/builtin/install-windows-10-with-uefi-and-gpt/copy_iso_to_udisk.webp"alt="将镜像文件复制进U盘" /></p><h1 id="开始装机">开始装机</h1><p>关机后插上U盘，开机进入BIOS设置，把第一启动项改为U盘，保存设置后重启。进入到PE后，打开DiskGenius分区工具。<img src="/img/builtin/install-windows-10-with-uefi-and-gpt/dg.webp"alt="分区软件DiskGenius" /></p><p>选中需要分区的硬盘，点击上方「快速分区」。 <imgsrc="/img/builtin/install-windows-10-with-uefi-and-gpt/fast_part.webp"alt="点击快速分区" /></p><p>分区表改为「GPT(GUID)」，分区数量根据自己需要调整，我这里选择1个。其它选项默认即可。<imgsrc="/img/builtin/install-windows-10-with-uefi-and-gpt/partition_setting.webp"alt="分区设定" /></p><p>点击「确定」开始格式化硬盘。同样会<strong>清空</strong>所有数据，注意数据备份。</p><p>打开WinNTSetup（今天的主角），可以看到有很多选项。我们主要动这几个设置，如图所示。<imgsrc="/img/builtin/install-windows-10-with-uefi-and-gpt/winntsetup.webp"alt="WinNTSetup 图解" /></p><p>点击开始安装。安装速度取决于硬盘和U盘的读写速率。</p><p>这时候提示是否重启，我们先拔掉U盘，然后点击「重启」。 <imgsrc="/img/builtin/install-windows-10-with-uefi-and-gpt/restart_box.webp"alt="提示是否重启" /></p><p>重启后应该会直接进入Windows的oobe，也就是欢迎界面，并让你配置一些东西。如果显示的是「BOOTMGRIS MISSING」，说明UEFI设置可能未启用，或者Windows BootManager不是第一启动项。这时就要重启并在BIOS里调整相应设置。</p><p>以上就是最基本的安装系统教程。</p><p><span class="heimu" style="text-decoration:line-through;"title="你知道的太多了">写完这篇博客，我也应该进入半退休状态了。有缘再见。</span></p>]]></content>
    
    
    <categories>
      
      <category>Windows</category>
      
      <category>Windows 10</category>
      
    </categories>
    
    
    <tags>
      
      <tag>windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解决 VMware 无法开启 Intel VT-x 的问题</title>
    <link href="/posts/42854/"/>
    <url>/posts/42854/</url>
    
    <content type="html"><![CDATA[<h1 id="问题重现">问题重现</h1><blockquote><p>Intel VT-x是英特尔公司开发的一种虚拟化技术，启用它可以使虚拟机减少卡顿、性能提升等优化。</p></blockquote><p>我在 VMware Workstation Pro 给虚拟机启用 <code>Intel VT-x</code>后，虚拟机无法正常启动，如下图所示。</p><figure><imgsrc="/img/builtin/solve-unsupported-intel-vt-x/unsupport-intel-vt-x.webp"alt="「此平台不支持虚拟化的 Intel VT-x/EPT。不使用虚拟化的Intel VT-x/EPT，是否继续？」" /><figcaption aria-hidden="true">「此平台不支持虚拟化的 IntelVT-x/EPT。不使用虚拟化的Intel VT-x/EPT，是否继续？」</figcaption></figure><p>这时有两种选择：</p><ul><li>如果选择“否”，那么虚拟机将不会启动。</li><li>如果选择“是”，虚拟机当然也不会启动，并弹出下面的提示框。</li></ul><figure><imgsrc="/img/builtin/solve-unsupported-intel-vt-x/cannot-launch-virtual-machine.webp"alt="「VMware Workstation 在此主机上不支持嵌套虚拟化。模块“HV”启动失败。未能启动虚拟机。」" /><figcaption aria-hidden="true">「VMware Workstation在此主机上不支持嵌套虚拟化。模块“HV”启动失败。未能启动虚拟机。」</figcaption></figure><h1 id="原因分析">原因分析</h1><p>微软的 Hyper-V 与 VMware Workstation之间是冲突的，所以你不能二者兼得。因此，如果你要在 VMware中使用英特尔虚拟化技术，就必须要舍弃 Hyper-V。</p><p><strong>注意：关闭 Hyper-V 会导致 WSL2 无法正常使用，但 WSL1可以。</strong></p><h1 id="解决方案">解决方案</h1><p>如果实在要用 Intel VT-x，那么还是要把 Hyper-V 关闭掉。</p><p>右键 <i class="fa fa-windows"></i>（开始菜单），然后点击<code>Windows PowerShell (管理员)</code>（或<code>命令提示符(管理员)</code>）输入下面的命令。注意，一定要点<strong>管理员</strong>的，否则没有操作权限。</p><figure><imgsrc="/img/builtin/solve-unsupported-intel-vt-x/run-powershell-as-administrator.webp"alt="右键开始菜单，打开Windows Powershell(管理员)" /><figcaption aria-hidden="true">右键开始菜单，打开WindowsPowershell(管理员)</figcaption></figure><p>复制粘贴下面的命令，然后按回车键执行。可以看到操作成功啦。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Powershell">bcdedit /<span class="hljs-built_in">set</span> hypervisorlaunchtype off<br></code></pre></td></tr></table></figure><figure><imgsrc="/img/builtin/solve-unsupported-intel-vt-x/run-command-in-powershell.webp"alt="执行命令成功" /><figcaption aria-hidden="true">执行命令成功</figcaption></figure><p>接下来<strong>重启PC</strong>。一定要<em>重启</em>才能生效，而不是先关机再开机。</p><p>重启好后 VMware Workstation Pro 就可以使用 <code>Intel VT-x</code>启动虚拟机，但同时 WSL2 和 Hyper-V 也无法正常使用了。</p>]]></content>
    
    
    <categories>
      
      <category>Windows</category>
      
      <category>Windows 10</category>
      
      <category>虚拟化技术 (Virtualization)</category>
      
    </categories>
    
    
    <tags>
      
      <tag>windows</tag>
      
      <tag>solution</tag>
      
      <tag>vmware</tag>
      
      <tag>virtual machine</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在 VS Code 中配置 C/C++ 编译器</title>
    <link href="/posts/37018/"/>
    <url>/posts/37018/</url>
    
    <content type="html"><![CDATA[<h1 id="前言">前言</h1><blockquote><p>以下内容摘自<ahref="https://zh.wikipedia.org/wiki/Visual_Studio_Code">维基百科</a>：</p><p>Visual Studio Code（简称 VSCode）是一款由微软开发且跨平台的免费源代码编辑器。该软件以扩展的方式支持语法高亮、代码自动补全（又称IntelliSense）、代码重构功能，并且内置了命令行工具和 Git版本控制系统。用户可以更改主题和键盘快捷方式实现个性化设置，也可以通过内置的扩展程序商店安装其他扩展以拓展软件功能。</p></blockquote><p>既然它这么强大，那我们今天就来学习如何在 VS Code 中配置 C/C++。</p><h1 id="开始配置">开始配置</h1><p>　　配置环境变量会因不同平台而异，本篇文章主要讨论如何在 Windows操作系统上配置 <code>gcc</code> 或 <code>g++</code> 编译器。</p><h2 id="从-dev-c-配置环境变量">从 Dev-C++ 配置环境变量</h2><p>　　Dev-C++是一个轻量级的<code>C/C++ 集成开发环境</code>，它内置了编辑器、编译器和连接器，提供语法高亮，还有多样的调试功能。相比与其他<code>C/C++ 集成开发环境</code>，Dev-C++具有功能简洁、易上手等优点，深受广大用户的喜爱。</p><p>　　<strong>以下教程以 Dev-C++ 5.9.2为例，其他版本大同小异。</strong></p><h3 id="step-1-定位-gccg-编译器目录">Step 1: 定位 gcc/g++编译器目录</h3><p>　　打开 Dev-C++ 的安装目录，如下图所示。（若无法找到，可右键 Dev-C++的快捷方式，然后点击「打开文件所在位置」）</p><figure><imgsrc="/img/builtin/configure-c-and-cpp-compiler-in-vscode/devcpp_installation_directory.webp"alt="Dev-C++ 的安装目录" /><figcaption aria-hidden="true">Dev-C++ 的安装目录</figcaption></figure><p>　　然后依次打开文件夹「MinGW64」-&gt;「bin」，如下图所示。</p><figure><imgsrc="/img/builtin/configure-c-and-cpp-compiler-in-vscode/devcpp_mingw_binary_directory.webp"alt="依次打开「MinGW64」-&gt;「bin」后的目录" /><figcaptionaria-hidden="true">依次打开「MinGW64」-&gt;「bin」后的目录</figcaption></figure><p>　　点击上方的地址栏，将路径复制下来。</p><figure><imgsrc="/img/builtin/configure-c-and-cpp-compiler-in-vscode/devcpp_mingw_binary_path.webp"alt="复制这串路径" /><figcaption aria-hidden="true">复制这串路径</figcaption></figure><h3 id="step-2-配置系统环境变量">Step 2: 配置系统环境变量</h3><p>　　前面说到，环境变量的作用就是给系统提供一个可以随时调用的变量。如果我们将一个文件夹添加至环境变量，那么这个文件夹里的所有程序都会被添加到环境变量。所以，我们需要做的，就是将刚才复制下来的路径添加到环境变量。这样，无论什么程序（当然也包括VS Code）都可以调用编译器了。</p><p>　　按住 <i class="fa fa-windows"></i> + R 打开「运行」，输入<code>sysdm.cpl</code> 后点击「确定」。</p><figure><imgsrc="/img/builtin/configure-c-and-cpp-compiler-in-vscode/run_sysdm_dot_cpl.webp"alt="打开「运行」，并输入sysdm.cpl" /><figcaptionaria-hidden="true">打开「运行」，并输入sysdm.cpl</figcaption></figure><p>　　依次点击「高级」选项卡 -&gt;「环境变量」，如下图所示。</p><figure><imgsrc="/img/builtin/configure-c-and-cpp-compiler-in-vscode/click_advance_then_envar.webp"alt="点击「高级」选项卡 -&gt;「环境变量」" /><figcaption aria-hidden="true">点击「高级」选项卡-&gt;「环境变量」</figcaption></figure><p>　　在下方「系统变量」中找到名为「Path」的变量，选中这一行并点击「编辑」。</p><figure><imgsrc="/img/builtin/configure-c-and-cpp-compiler-in-vscode/click_path_then_edit.webp"alt="找到名为「Path」的变量并选中" /><figcaption aria-hidden="true">找到名为「Path」的变量并选中</figcaption></figure><p>　　在弹出的窗口中点击「新建」，将刚刚复制的路径粘贴上去，然后点击「确定」。</p><figure><imgsrc="/img/builtin/configure-c-and-cpp-compiler-in-vscode/add_devcpp_mingw_binary_to_envar.webp"alt="点击「新建」并将路径贴上" /><figcaption aria-hidden="true">点击「新建」并将路径贴上</figcaption></figure><p>　　这样就成功将 <code>gcc</code> 和 <code>g++</code>编译器添加到环境变量了。若想得知是否配置成功，可打开 cmd 并输入<code>gcc --version</code>，若能正确输出 <code>gcc</code>版本号，那便是成功了。</p><h3 id="step-3-在-visual-studio-code-中安装-cc-扩展">Step 3: 在 VisualStudio Code 中安装 C/C++ 扩展</h3><p>　　前面我们将 Dev-C++集成的编译器添加到了环境变量，但我们还差一步就能在 Visual Studio Code中愉快地编写 C/C++ 代码了。</p><p>　　打开 Visual StudioCode（若之前已经打开，则需要<strong>关闭窗口并重新打开</strong>），点击左侧侧边栏的「扩展」（快捷键为Control-Shift-X），然后输入扩展名即可查找扩展，如下图所示。</p><figure><imgsrc="/img/builtin/configure-c-and-cpp-compiler-in-vscode/open_extension_and_search.webp"alt="点击「扩展」，并搜索相应扩展" /><figcaption aria-hidden="true">点击「扩展」，并搜索相应扩展</figcaption></figure><p>　　这里我们主要安装以下两个扩展：</p><ul><li><code>C/C++</code>（用于代码分析）</li><li><code>Code Runner</code>（这是一个可运行多种语言代码的扩展，涵盖了一些主流语言包括C,C++, Java, JavaScript, PHP, Python, Go, Objective-C, Rust等）</li></ul><p><imgsrc="/img/builtin/configure-c-and-cpp-compiler-in-vscode/c_and_cpp_extension.webp"alt="C/C++" /> <imgsrc="/img/builtin/configure-c-and-cpp-compiler-in-vscode/code_runner_extension.webp"alt="Code Runner" /></p><p>　　安装好上面两个扩展后，我们需要对第二个扩展稍微配置一下。</p><p>　　打开 <code>Code Runner</code> 扩展页，点击<i class="fa fa-cog"></i> 并点击「扩展设置」，如下图所示。</p><figure><imgsrc="/img/builtin/configure-c-and-cpp-compiler-in-vscode/open_code_runner_settings.webp"alt="打开扩展设置" /><figcaption aria-hidden="true">打开扩展设置</figcaption></figure><p>　　在里面找到并勾选「Run In Terminal」（在终端中打开）和「Save FileBefore Run」（运行前保存文件），如下图所示。</p><figure><imgsrc="/img/builtin/configure-c-and-cpp-compiler-in-vscode/enable_run_in_terminal_and_save_file_before_run.webp"alt="打开「Run In Terminal」和「Save File Before Run」" /><figcaption aria-hidden="true">打开「Run In Terminal」和「Save FileBefore Run」</figcaption></figure><p>　　这样就大功告成了。</p>]]></content>
    
    
    <categories>
      
      <category>Visual Studio Code</category>
      
      <category>环境配置</category>
      
      <category>编程</category>
      
      <category>C</category>
      
      <category>C++</category>
      
    </categories>
    
    
    <tags>
      
      <tag>环境变量</tag>
      
      <tag>vs code</tag>
      
      <tag>配置</tag>
      
      <tag>c</tag>
      
      <tag>c++</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>一堵墙的故事</title>
    <link href="/posts/20321/"/>
    <url>/posts/20321/</url>
    
    <content type="html"><![CDATA[<h1 id="一个男孩和墙的故事">一个男孩和「墙」的故事</h1><p>一堵墙。</p><p>男人看着这堵墙，从他还是个男孩的时候，到下巴上冒出细细的胡须，又到成为一个真正的男人。墙也从最坚固的样子慢慢衰颓。</p><p>这次一定要征服它，一定可以「征服」它。男人心想。</p><p>说来也奇怪，小时候与小伙伴玩闹，打赌谁能爬上这堵墙，男孩就从没赢过。不管用怎样的方法，甚至把家里的梯子搬出来，也没能成功爬上去，一次也没有。</p><p>久而久之，这堵墙成了男孩的心结，即使成年后，只要站在这堵墙前，就仍然是那个四五岁不服输的小男孩。</p><p>男人开始攀爬，这么多年来，他已经对墙砖的位置烂熟于心。哪一块砖微微凸出来，可以抓住或者作为落脚的地方，男人都了然于心。但他不明白为什么总是在最接近墙头的时候失败。</p><p>这次能够成功吗？</p><p>世界本触手可及。</p>]]></content>
    
    
    <categories>
      
      <category>杂谈</category>
      
      <category>碎碎念</category>
      
    </categories>
    
    
    <tags>
      
      <tag>杂谈,碎碎念</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Linux 的「time」命令在 Windows 中的替代品</title>
    <link href="/posts/21697/"/>
    <url>/posts/21697/</url>
    
    <content type="html"><![CDATA[<p>相信大家对 Bash 中的 <code>time</code>命令都不陌生吧，它可以计算程序运行所占用的资源情况。例如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs BASH">$ time ./hello.sh <span class="hljs-comment"># hello.sh 是自定义脚本文件</span><br>Hello, world! ^_^<br>./hello.sh  0.00s user 0.00s system 0% cpu 0.006 total<br></code></pre></td></tr></table></figure><p>那么在 Windows 中有没有类似的命令呢？当然有啦~~</p><p>在 <code>Windows Powershell</code> 中，可以使用<code>Measure-Command</code> 命令来查看命令运行所花费的时间。</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs Powershell"><span class="hljs-built_in">Measure-Command</span> &#123; YOUR_COMMAND_HERE &#125;<br></code></pre></td></tr></table></figure><p>以下是一个简单的例子：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs Powershell"><span class="hljs-built_in">PS</span> C:\users\mclie&gt; <span class="hljs-built_in">Measure-Command</span> &#123;.\hello.bat | <span class="hljs-built_in">Out-Default</span>&#125;<br>Hello, world!<br><br><br>Days              : <span class="hljs-number">0</span><br>Hours             : <span class="hljs-number">0</span><br>Minutes           : <span class="hljs-number">0</span><br>Seconds           : <span class="hljs-number">0</span><br>Milliseconds      : <span class="hljs-number">17</span><br>Ticks             : <span class="hljs-number">177755</span><br>TotalDays         : <span class="hljs-number">2.05734953703704</span>E<span class="hljs-literal">-07</span><br>TotalHours        : <span class="hljs-number">4.93763888888889</span>E<span class="hljs-literal">-06</span><br>TotalMinutes      : <span class="hljs-number">0.000296258333333333</span><br>TotalSeconds      : <span class="hljs-number">0.0177755</span><br>TotalMilliseconds : <span class="hljs-number">17.7755</span><br></code></pre></td></tr></table></figure><p>在上面的例子中，我们执行了<code>.\hello.bat</code>（一个自定义的批处理脚本）并透过管道将输出内容传给<code>Out-Default</code> 来让 Powershell输出命令结果（不指定则不输出），最终可以观察到运行该命令花费了<code>0.0177755 秒</code>。</p>]]></content>
    
    
    <categories>
      
      <category>Windows</category>
      
      <category>Windows 10</category>
      
      <category>Windows 11</category>
      
      <category>Windows Powershell</category>
      
    </categories>
    
    
    <tags>
      
      <tag>windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>解决 Win10 操作 OGG 文件时发生卡顿的 BUG</title>
    <link href="/posts/48351/"/>
    <url>/posts/48351/</url>
    
    <content type="html"><![CDATA[<p><span class="heimu" style="text-decoration:line-through;"title="你知道的太多了">（不愧为bugwin……） </span></p><p><strong>注: Windows 10 22H2 可完美解决此问题。Windows11暂未测试，欢迎读者发留言分享测试结果。</strong></p><h1 id="问题复现">问题复现</h1><p>今天玩 tts 的时候发现一个音频文件是 .ogg格式的，但由于文件名太乱了，所以准备先给它改名成1.ogg。但改完的时候发现了窗口突然卡死：</p><figure><img src="/img/builtin/solve-windows-ogg-bug/dead_explorer.webp"alt="explorer.exe 未响应" /><figcaption aria-hidden="true">explorer.exe 未响应</figcaption></figure><p>把整个文件夹删除也不行（删除卡在 0%）：</p><figure><imgsrc="/img/builtin/solve-windows-ogg-bug/cannot_delete_directory.webp"alt="删除文件卡在 0%" /><figcaption aria-hidden="true">删除文件卡在 0%</figcaption></figure><h1 id="原因分析">原因分析</h1><p>经过网络搜索之后，发现这是因为当进入有 .OGG文件的文件夹时，会调用一个叫「Web媒体扩展」的插件，用来获取ogg文件的一些信息。但是这个插件的性能极差，才导致了这次BUG 的发生。</p><h1 id="解决方案">解决方案</h1><p>鉴于此插件的作用不大，且使用频率极低，可考虑将此插件卸载。</p><p>按住 <i class="fa fa-windows"></i>+【i】打开「设置」，选择「应用」，找到「Web媒体扩展」并点击「卸载」即可。</p><figure><imgsrc="/img/builtin/solve-windows-ogg-bug/delete_web_media_extension.webp"alt="卸载「Web 媒体扩展」" /><figcaption aria-hidden="true">卸载「Web 媒体扩展」</figcaption></figure><p>卸载完成之后，再去对OGG文件进行更名、删除、移动等操作就畅通无阻了。</p>]]></content>
    
    
    <categories>
      
      <category>Windows</category>
      
      <category>Windows 10</category>
      
    </categories>
    
    
    <tags>
      
      <tag>windows</tag>
      
      <tag>solution</tag>
      
      <tag>bug</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
